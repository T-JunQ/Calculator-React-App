{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\junqi\\\\Desktop\\\\react-app\\\\reactapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { render } from \"@testing-library/react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rows = 3;\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  _s();\n  const [squares, setSquares] = useState(Array(3).fill(Array(3).fill(null)));\n  function onClickListener(i, j) {\n    const newrows = squares.slice();\n    console.log(newrows[0][0]);\n    newrows[0][0] = \"X\";\n    console.log(newrows);\n    setSquares(newrows);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: [/*#__PURE__*/_jsxDEV(Square, {\n      value: squares[0],\n      onSquareClick: () => onClickListener(0, 0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[1],\n      onSquareClick: () => onClickListener(1, 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[2],\n      onSquareClick: () => onClickListener(2, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n\n  // return rows.map((col, i) => (\n  //   <div className=\"board-row\">\n  //     <Square onSquareClick={() => onClickListener(0, 0)} />\n  //     {col.map((value, j) => (\n  //       <Square\n  //         key={i + j}\n  //         value={value}\n  //         onSquareClick={() => onClickListener(i, j)}\n  //       />\n  //     ))}\n  //   </div>\n  // ));\n}\n\n// return () => {\n//   rows.forEach((i) => {\n//     <h1>e</h1>;\n//     cols.forEach((j) => {\n//       return (\n//         <>\n//           <h1>e</h1> <Square value={rows[i][j]} />\n//         </>\n//       );\n//     });\n//   });\n// };\n\n// return Array(rows).fill(\n//   <div className=\"board-row\">\n//     {Array(rows)\n//       .fill()\n//       .map((v, i) => (\n//         <Square></Square>\n//       ))}\n//   </div>\n// );\n// }\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n_s(Board, \"9U0avn4E674Vd2avCHnfo7+lrjA=\");\n_c2 = Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["logo","render","useState","jsxDEV","_jsxDEV","rows","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","squares","setSquares","Array","fill","onClickListener","i","j","newrows","slice","console","log","_c2","$RefreshReg$"],"sources":["C:/Users/junqi/Desktop/react-app/reactapp/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { render } from \"@testing-library/react\";\nimport { useState } from \"react\";\n\nconst rows = 3;\n\nfunction Square({ value, onSquareClick }) {\n  return (\n    <button className=\"square\" onClick={onSquareClick}>\n      {value}\n    </button>\n  );\n}\n\nexport default function Board() {\n  const [squares, setSquares] = useState(Array(3).fill(Array(3).fill(null)));\n\n  function onClickListener(i, j) {\n    const newrows = squares.slice();\n    console.log(newrows[0][0]);\n    newrows[0][0] = \"X\";\n    console.log(newrows);\n    setSquares(newrows);\n  }\n\n  return (\n    <div className=\"board-row\">\n      <Square value={squares[0]} onSquareClick={() => onClickListener(0, 0)} />\n      <Square value={squares[1]} onSquareClick={() => onClickListener(1, 1)} />\n      <Square value={squares[2]} onSquareClick={() => onClickListener(2, 2)} />\n    </div>\n  );\n\n  // return rows.map((col, i) => (\n  //   <div className=\"board-row\">\n  //     <Square onSquareClick={() => onClickListener(0, 0)} />\n  //     {col.map((value, j) => (\n  //       <Square\n  //         key={i + j}\n  //         value={value}\n  //         onSquareClick={() => onClickListener(i, j)}\n  //       />\n  //     ))}\n  //   </div>\n  // ));\n}\n\n// return () => {\n//   rows.forEach((i) => {\n//     <h1>e</h1>;\n//     cols.forEach((j) => {\n//       return (\n//         <>\n//           <h1>e</h1> <Square value={rows[i][j]} />\n//         </>\n//       );\n//     });\n//   });\n// };\n\n// return Array(rows).fill(\n//   <div className=\"board-row\">\n//     {Array(rows)\n//       .fill()\n//       .map((v, i) => (\n//         <Square></Square>\n//       ))}\n//   </div>\n// );\n// }\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,IAAI,GAAG,CAAC;AAEd,SAASC,MAAMA,CAAC;EAAEC,KAAK;EAAEC;AAAc,CAAC,EAAE;EACxC,oBACEJ,OAAA;IAAQK,SAAS,EAAC,QAAQ;IAACC,OAAO,EAAEF,aAAc;IAAAG,QAAA,EAC/CJ;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACC,EAAA,GANQV,MAAM;AAQf,eAAe,SAASW,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAACmB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;EAE1E,SAASC,eAAeA,CAACC,CAAC,EAAEC,CAAC,EAAE;IAC7B,MAAMC,OAAO,GAAGP,OAAO,CAACQ,KAAK,CAAC,CAAC;IAC/BC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1BA,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;IACnBE,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;IACpBN,UAAU,CAACM,OAAO,CAAC;EACrB;EAEA,oBACEtB,OAAA;IAAKK,SAAS,EAAC,WAAW;IAAAE,QAAA,gBACxBP,OAAA,CAACE,MAAM;MAACC,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAE;MAACX,aAAa,EAAEA,CAAA,KAAMe,eAAe,CAAC,CAAC,EAAE,CAAC;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzEX,OAAA,CAACE,MAAM;MAACC,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAE;MAACX,aAAa,EAAEA,CAAA,KAAMe,eAAe,CAAC,CAAC,EAAE,CAAC;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzEX,OAAA,CAACE,MAAM;MAACC,KAAK,EAAEY,OAAO,CAAC,CAAC,CAAE;MAACX,aAAa,EAAEA,CAAA,KAAMe,eAAe,CAAC,CAAC,EAAE,CAAC;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;;EAGR;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAAG,EAAA,CA9EwBD,KAAK;AAAAa,GAAA,GAALb,KAAK;AAAA,IAAAD,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}